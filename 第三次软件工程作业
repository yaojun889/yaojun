#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void CC(char (*a)[10])
{
	strcpy(a[3],"void");strcpy(a[4],"int");strcpy(a[5],"float");strcpy(a[6],"char");
	strcpy(a[7],"if");strcpy(a[8],"else");strcpy(a[9],"while");strcpy(a[10],"do");
	strcpy(a[11],"for");strcpy(a[12],"return");strcpy(a[13],"main");strcpy(a[14],"+");
	strcpy(a[15],"-");strcpy(a[16],"*");strcpy(a[17],"/");strcpy(a[18],"%");strcpy(a[19],"<");
	strcpy(a[20],"<=");strcpy(a[21],">");strcpy(a[22],">=");strcpy(a[23],"==");strcpy(a[24],"!=");
	strcpy(a[25],"&&");strcpy(a[26],"||");strcpy(a[27],"=");strcpy(a[28],"(");strcpy(a[29],")");
	strcpy(a[30],"[");strcpy(a[31],"]");strcpy(a[32],"{");strcpy(a[33],"}");strcpy(a[34],";");strcpy(a[35],",");
}
int cha(char *a,char (*b)[10])
{
	int i;
	for(i=3;i<36;i++)
	{
	 if(strcmp(a,b[i])==0)
		 break;
	}
	return i;
}
int main()
{
	char bi[35][10],hang[100][100],ci[100],temp[100]={"\0"};
	int i,j,k,m,n=0,x=0,a[100],q=0,p=1;
	CC(bi);
	a[0]=0;
	for(m=0;;m++)
	{
		gets(hang[m]);
		if(strcmp(hang[m],"#")==0) break;
	}
	for(m=0;;m++,p++)
	{
		if(strcmp(hang[m],"#")==0) break;
		if(strcmp(hang[m],"\0")==0) {p--;continue;}
		strcpy(ci,hang[m]);
		    for(i=0;;)
		   {
			  if(ci[i]==' ') {i++;continue;}
			  if(ci[i]=='\0') break;
			  if(ci[i]>='a'&&ci[i]<='z'&&n!=1)
			   {
			    for(j=i;;)
			      {
			        if(ci[j]>='a'&&ci[j]<='z')
				      j++;
			        else break;
			      }
			     for(k=0;i<j;k++,i++)
				    temp[k]=ci[i];
		       	if(cha(temp,bi)!=36) printf("<%d,->,",cha(temp,bi));
			    else printf("<1,%s>,",temp);
				memset(temp, 0, sizeof(temp));
			   }
			else if(ci[i]>='0'&&ci[i]<='9'&&n!=1)
			{
				x=0;
				for(j=i+1;;)
			   {
                 if(ci[j]>='a'&&ci[j]<='z')
				 {
					 while(ci[j]>='a'&&ci[j]<='z')
						 j++;
					 x=1;
					 a[0]=1;
					 a[++q]=p;
					 break;
				 }
			     else if(ci[j]>='0'&&ci[j]<='9')
				         j++;
			     else break;
			   }
			    for(k=0;i<j;k++,i++)
				   temp[k]=ci[i];
			    if(x!=1) printf("<2,%s>,",temp);
				else printf("LexicalError,");
				memset(temp, 0, sizeof(temp));
			}
			else if(ci[i]==' ') continue;
			else
			  {
				for(k=0;k<2;k++,i++)
				{   if(ci[i]==' '||ci[i]=='\0'||(ci[i]>='0'&&ci[i]<='9')||(ci[i]>='a'&&ci[i]<='z')) break;
				     temp[k]=ci[i];
				}
				if(cha(temp,bi)!=36) {printf("<%d,->,",cha(temp,bi));memset(temp, 0, sizeof(temp));}
				else if(strcmp(temp,"//")==0) {memset(ci, 0, sizeof(ci));memset(temp, 0, sizeof(temp));}
				else if(strcmp(temp,"/*")==0) {memset(ci, 0, sizeof(ci));memset(temp, 0, sizeof(temp));n=1;}
				else if(strcmp(temp,"*/")==0) {memset(ci, 0, sizeof(ci));memset(temp, 0, sizeof(temp));n=0;}
				else if(strcmp(temp,"\0")!=0)
				     { memset(temp, 0, sizeof(temp));temp[0]=ci[i-2];printf("<%d,->,",cha(temp,bi));
				       memset(temp, 0, sizeof(temp));temp[0]=ci[i-1];printf("<%d,->,",cha(temp,bi));
					   memset(temp, 0, sizeof(temp));
				      }
			  }
			if(n==1) i++;
			}
			if(strcmp(ci,"\0")!=0&&n!=1) printf("\n");
			memset(ci, 0, sizeof(ci));
	}
	if(a[0]==1)
		{
			printf("LexicalError(s) on line(s) ");
			for(i=1;i<=q;i++)
				printf("%d,",a[i]);
	    }
    system("pause");
	return 0;
}

